{
  "version_module": "True",
  "schemas": {
    "GoogleCloudVideointelligenceV1beta1_AnnotateVideoRequest": {
      "description": "Video annotation request.",
      "type": "object",
      "properties": {
        "features": {
          "enumDescriptions": [
            "Unspecified.",
            "Label detection. Detect objects, such as dog or flower.",
            "Human face detection and tracking.",
            "Shot change detection."
          ],
          "description": "Requested video annotation features.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "FEATURE_UNSPECIFIED",
              "LABEL_DETECTION",
              "FACE_DETECTION",
              "SHOT_CHANGE_DETECTION"
            ]
          }
        },
        "outputUri": {
          "description": "Optional location where the output (in JSON format) should be stored.\nCurrently, only [Google Cloud Storage](https://cloud.google.com/storage/)\nURIs are supported, which must be specified in the following format:\n`gs://bucket-id/object-id` (other URI formats return\ngoogle.rpc.Code.INVALID_ARGUMENT). For more information, see\n[Request URIs](/storage/docs/reference-uris).",
          "type": "string"
        },
        "videoContext": {
          "description": "Additional video context and/or feature-specific parameters.",
          "$ref": "GoogleCloudVideointelligenceV1beta1_VideoContext"
        },
        "locationId": {
          "description": "Optional cloud region where annotation should take place. Supported cloud\nregions: `us-east1`, `us-west1`, `europe-west1`, `asia-east1`. If no region\nis specified, a region will be determined based on video file location.",
          "type": "string"
        },
        "inputUri": {
          "description": "Input video location. Currently, only\n[Google Cloud Storage](https://cloud.google.com/storage/) URIs are\nsupported, which must be specified in the following format:\n`gs://bucket-id/object-id` (other URI formats return\ngoogle.rpc.Code.INVALID_ARGUMENT). For more information, see\n[Request URIs](/storage/docs/reference-uris).\nA video URI may include wildcards in `object-id`, and thus identify\nmultiple videos. Supported wildcards: '*' to match 0 or more characters;\n'?' to match 1 character.",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1beta1_AnnotateVideoRequest"
    },
    "GoogleCloudVideointelligenceV1alpha1_VideoAnnotationResults": {
      "description": "Annotation results for a single video.",
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Video annotations.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1alpha1_VideoAnnotation"
          }
        },
        "error": {
          "$ref": "GoogleRpc_Status",
          "description": "If set, indicates an error. Note that for a single `AnnotateRequest`\nsome videos may succeed and some may fail. Since video processing\nis asynchronous, status and errors, if any, are available only\nvia `Operation.response` which contains `AnnotateResponse`."
        },
        "segment": {
          "description": "The video segment where the video analysis was performed.",
          "$ref": "GoogleCloudVideointelligenceV1alpha1_VideoSegment"
        },
        "gcsContentUri": {
          "description": "Video file location in\n[Google Cloud Storage](https://cloud.google.com/storage/).",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1alpha1_VideoAnnotationResults"
    },
    "GoogleCloudVideointelligenceV1beta1_LabelLocation": {
      "description": "Label location.",
      "type": "object",
      "properties": {
        "level": {
          "enumDescriptions": [
            "Unspecified.",
            "Video-level. Corresponds to the whole video.",
            "Segment-level. Corresponds to one of `AnnotateSpec.segments`.",
            "Shot-level. Corresponds to a single shot (i.e. a series of frames\nwithout a major camera position or background change).",
            "Frame-level. Corresponds to a single video frame."
          ],
          "enum": [
            "LABEL_LEVEL_UNSPECIFIED",
            "VIDEO_LEVEL",
            "SEGMENT_LEVEL",
            "SHOT_LEVEL",
            "FRAME_LEVEL"
          ],
          "description": "Label level.",
          "type": "string"
        },
        "confidence": {
          "description": "Confidence that the label is accurate. Range: [0, 1].",
          "format": "float",
          "type": "number"
        },
        "segment": {
          "$ref": "GoogleCloudVideointelligenceV1beta1_VideoSegment",
          "description": "Video segment. Set to [-1, -1] for video-level labels.\nSet to [timestamp, timestamp] for frame-level labels.\nOtherwise, corresponds to one of `AnnotateSpec.segments`\n(if specified) or to shot boundaries (if requested)."
        }
      },
      "id": "GoogleCloudVideointelligenceV1beta1_LabelLocation"
    },
    "GoogleCloudVideointelligenceV1beta1_VideoSegment": {
      "description": "Video segment.",
      "type": "object",
      "properties": {
        "endTimeOffset": {
          "description": "End offset in microseconds (inclusive). Unset means 0.",
          "format": "int64",
          "type": "string"
        },
        "startTimeOffset": {
          "description": "Start offset in microseconds (inclusive). Unset means 0.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1beta1_VideoSegment"
    },
    "GoogleCloudVideointelligenceV1beta1_BoundingBox": {
      "description": "Bounding box.",
      "type": "object",
      "properties": {
        "top": {
          "description": "Top Y coordinate.",
          "format": "int32",
          "type": "integer"
        },
        "left": {
          "description": "Left X coordinate.",
          "format": "int32",
          "type": "integer"
        },
        "right": {
          "description": "Right X coordinate.",
          "format": "int32",
          "type": "integer"
        },
        "bottom": {
          "description": "Bottom Y coordinate.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudVideointelligenceV1beta1_BoundingBox"
    },
    "GoogleCloudVideointelligenceV1beta1_FaceLocation": {
      "description": "Face location.",
      "type": "object",
      "properties": {
        "boundingBox": {
          "description": "Bounding box in a frame.",
          "$ref": "GoogleCloudVideointelligenceV1beta1_BoundingBox"
        },
        "timeOffset": {
          "description": "Video time offset in microseconds.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1beta1_FaceLocation"
    },
    "GoogleCloudVideointelligenceV1beta1_FaceAnnotation": {
      "description": "Face annotation.",
      "type": "object",
      "properties": {
        "thumbnail": {
          "description": "Thumbnail of a representative face view (in JPEG format). Encoding: base64.",
          "format": "byte",
          "type": "string"
        },
        "segments": {
          "description": "All locations where a face was detected.\nFaces are detected and tracked on a per-video basis\n(as opposed to across multiple videos).",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1beta1_VideoSegment"
          }
        },
        "locations": {
          "description": "Face locations at one frame per second.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1beta1_FaceLocation"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1beta1_FaceAnnotation"
    },
    "GoogleCloudVideointelligenceV1beta1_AnnotateVideoProgress": {
      "description": "Video annotation progress. Included in the `metadata`\nfield of the `Operation` returned by the `GetOperation`\ncall of the `google::longrunning::Operations` service.",
      "type": "object",
      "properties": {
        "annotationProgress": {
          "description": "Progress metadata for all videos specified in `AnnotateVideoRequest`.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1beta1_VideoAnnotationProgress"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1beta1_AnnotateVideoProgress"
    },
    "GoogleCloudVideointelligenceV1alpha1_AnnotateResponse": {
      "description": "Video annotation response. Included in the `response`\nfield of the `Operation` returned by the `GetOperation` call\nof the `google::longrunning::Operations` service.",
      "type": "object",
      "properties": {
        "results": {
          "description": "Annotation results for all videos specified in `AnnotateRequest`.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1alpha1_VideoAnnotationResults"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1alpha1_AnnotateResponse"
    },
    "GoogleCloudVideointelligenceV1alpha1_VideoAnnotation": {
      "description": "Video-level or frame-level annotation.",
      "type": "object",
      "properties": {
        "unsafeContent": {
          "description": "Likelihood that the frame contains unsafe content.",
          "$ref": "GoogleCloudVideointelligenceV1alpha1_UnsafeContentLikelihood"
        },
        "confidence": {
          "description": "Confidence level between 0 and 1. Higher score indicates higher\nprobability that the annotation is accurate.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Textual description, e.g. `Fixed-gear bicycle`.",
          "type": "string"
        },
        "languageCode": {
          "description": "Language code for `description` in the `BCP47` format.",
          "type": "string"
        },
        "timeOffset": {
          "description": "Video offset in milliseconds. Set to `-1` for video-level annotations\nwhich are not associated with any specific time offset.",
          "format": "int64",
          "type": "string"
        },
        "annotationType": {
          "description": "Annotation type.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Label detection. Detect objects, such as dog, flower, human that\ndescribe what has been found in the video.",
            "Logo detection. Detect logos, such as `Google`.",
            "Landmark detection. Detect landmarks, such as `Eiffel Tower`.",
            "Face tracking. Identifies human faces in the video and assigns\nthem identifiers for tracking.",
            "Detection of unsafe (e.g. violent or adult) content."
          ],
          "enum": [
            "ANNOTATION_TYPE_UNSPECIFIED",
            "LABEL_DETECTION",
            "LOGO_DETECTION",
            "LANDMARK_DETECTION",
            "FACE_TRACKING",
            "UNSAFE_CONTENT_DETECTION"
          ]
        }
      },
      "id": "GoogleCloudVideointelligenceV1alpha1_VideoAnnotation"
    },
    "GoogleCloudVideointelligenceV1alpha1_UnsafeContentLikelihood": {
      "description": "Likelihood of unsafe content.",
      "type": "object",
      "properties": {
        "medical": {
          "description": "Likelihood of medical content.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "Very unlikely.",
            "Unlikely.",
            "Possible.",
            "Likely.",
            "Very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "violence": {
          "description": "Likelihood of violent content.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "Very unlikely.",
            "Unlikely.",
            "Possible.",
            "Likely.",
            "Very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "adult": {
          "enumDescriptions": [
            "Unknown likelihood.",
            "Very unlikely.",
            "Unlikely.",
            "Possible.",
            "Likely.",
            "Very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood of adult content.",
          "type": "string"
        },
        "spoof": {
          "description": "Likelihood that an obvious modification was made to the original\nversion to make it appear funny or offensive.",
          "type": "string",
          "enumDescriptions": [
            "Unknown likelihood.",
            "Very unlikely.",
            "Unlikely.",
            "Possible.",
            "Likely.",
            "Very likely."
          ],
          "enum": [
            "UNKNOWN",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        }
      },
      "id": "GoogleCloudVideointelligenceV1alpha1_UnsafeContentLikelihood"
    },
    "GoogleLongrunning_Operation": {
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf true, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "response": {
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should have the format of `operations/some/unique/name`.",
          "type": "string"
        },
        "error": {
          "$ref": "GoogleRpc_Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object"
        }
      },
      "id": "GoogleLongrunning_Operation"
    },
    "GoogleCloudVideointelligenceV1alpha1_VideoFileProgressMetadata": {
      "description": "Describes the progress of video processing for a single video.",
      "type": "object",
      "properties": {
        "gcsContentUri": {
          "description": "Video file location in\n[Google Cloud Storage](https://cloud.google.com/storage/).",
          "type": "string"
        },
        "lastUpdateTime": {
          "description": "Time of the most recent update.",
          "format": "google-datetime",
          "type": "string"
        },
        "progressPercent": {
          "description": "Approximate percentage processed thus far. Guaranteed to be 100\nwhen fully processed and the results are available.",
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "description": "Time when the request was received.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1alpha1_VideoFileProgressMetadata"
    },
    "GoogleCloudVideointelligenceV1beta1_VideoAnnotationResults": {
      "description": "Annotation results for a single video.",
      "type": "object",
      "properties": {
        "error": {
          "$ref": "GoogleRpc_Status",
          "description": "If set, indicates an error. Note that for a single `AnnotateVideoRequest`\nsome videos may succeed and some may fail."
        },
        "faceAnnotations": {
          "description": "Face annotations. There is exactly one element for each unique face.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1beta1_FaceAnnotation"
          }
        },
        "shotAnnotations": {
          "description": "Shot annotations. Each shot is represented as a video segment.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1beta1_VideoSegment"
          }
        },
        "inputUri": {
          "description": "Video file location in\n[Google Cloud Storage](https://cloud.google.com/storage/).",
          "type": "string"
        },
        "labelAnnotations": {
          "description": "Label annotations. There is exactly one element for each unique label.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1beta1_LabelAnnotation"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1beta1_VideoAnnotationResults"
    },
    "GoogleCloudVideointelligenceV1beta1_LabelAnnotation": {
      "description": "Label annotation.",
      "type": "object",
      "properties": {
        "languageCode": {
          "description": "Language code for `description` in BCP-47 format.",
          "type": "string"
        },
        "description": {
          "description": "Textual description, e.g. `Fixed-gear bicycle`.",
          "type": "string"
        },
        "locations": {
          "description": "Where the label was detected and with what confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1beta1_LabelLocation"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1beta1_LabelAnnotation"
    },
    "GoogleCloudVideointelligenceV1alpha1_AnnotationProgressMetadata": {
      "description": "Describes the progress of an `Annotate` operation. Included in\nthe `metadata` field of the `Operation` returned by the `GetOperation`\ncall of the `google::longrunning::Operations` service.",
      "type": "object",
      "properties": {
        "progressMetadata": {
          "description": "Progress metadata for all videos specified in `AnnotateRequest`.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1alpha1_VideoFileProgressMetadata"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1alpha1_AnnotationProgressMetadata"
    },
    "GoogleCloudVideointelligenceV1beta1_AnnotateVideoResponse": {
      "description": "Video annotation response. Included in the `response`\nfield of the `Operation` returned by the `GetOperation`\ncall of the `google::longrunning::Operations` service.",
      "type": "object",
      "properties": {
        "annotationResults": {
          "description": "Annotation results for all videos specified in `AnnotateVideoRequest`.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1beta1_VideoAnnotationResults"
          }
        }
      },
      "id": "GoogleCloudVideointelligenceV1beta1_AnnotateVideoResponse"
    },
    "GoogleCloudVideointelligenceV1alpha1_VideoSegment": {
      "description": "Video segment.",
      "type": "object",
      "properties": {
        "endTimeOffset": {
          "description": "End offset in microseconds (exclusive).",
          "format": "int64",
          "type": "string"
        },
        "startTimeOffset": {
          "description": "Start offset in microseconds (inclusive).",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1alpha1_VideoSegment"
    },
    "GoogleCloudVideointelligenceV1beta1_VideoContext": {
      "description": "Video context and/or feature-specific parameters.",
      "type": "object",
      "properties": {
        "segments": {
          "description": "Video segments to annotate. The segments may overlap and are not required\nto be contiguous or span the whole video. If unspecified, each video\nis treated as a single segment.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudVideointelligenceV1beta1_VideoSegment"
          }
        },
        "labelDetectionMode": {
          "description": "If label detection has been requested, what labels should be detected\nin addition to video-level labels or segment-level labels. If unspecified,\ndefaults to `SHOT_MODE`.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Detect shot-level labels.",
            "Detect frame-level labels.",
            "Detect both shot-level and frame-level labels."
          ],
          "enum": [
            "LABEL_DETECTION_MODE_UNSPECIFIED",
            "SHOT_MODE",
            "FRAME_MODE",
            "SHOT_AND_FRAME_MODE"
          ]
        }
      },
      "id": "GoogleCloudVideointelligenceV1beta1_VideoContext"
    },
    "GoogleRpc_Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https://github.com/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` which can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting purpose.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security/privacy reasons.",
      "type": "object",
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details.  There will be a\ncommon set of message types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "id": "GoogleRpc_Status"
    },
    "GoogleCloudVideointelligenceV1beta1_VideoAnnotationProgress": {
      "description": "Annotation progress for a single video.",
      "type": "object",
      "properties": {
        "progressPercent": {
          "description": "Approximate percentage processed thus far.\nGuaranteed to be 100 when fully processed.",
          "format": "int32",
          "type": "integer"
        },
        "updateTime": {
          "description": "Time of the most recent update.",
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "description": "Time when the request was received.",
          "format": "google-datetime",
          "type": "string"
        },
        "inputUri": {
          "description": "Video file location in\n[Google Cloud Storage](https://cloud.google.com/storage/).",
          "type": "string"
        }
      },
      "id": "GoogleCloudVideointelligenceV1beta1_VideoAnnotationProgress"
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "protocol": "rest",
  "canonicalName": "Cloud Video Intelligence",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "rootUrl": "https://videointelligence.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "videointelligence",
  "batchPath": "batch",
  "title": "Google Cloud Video Intelligence API",
  "ownerName": "Google",
  "resources": {
    "videos": {
      "methods": {
        "annotate": {
          "description": "Performs asynchronous video annotation. Progress and results can be\nretrieved through the `google.longrunning.Operations` interface.\n`Operation.metadata` contains `AnnotateVideoProgress` (progress).\n`Operation.response` contains `AnnotateVideoResponse` (results).",
          "request": {
            "$ref": "GoogleCloudVideointelligenceV1beta1_AnnotateVideoRequest"
          },
          "httpMethod": "POST",
          "parameterOrder": [],
          "response": {
            "$ref": "GoogleLongrunning_Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {},
          "flatPath": "v1beta1/videos:annotate",
          "id": "videointelligence.videos.annotate",
          "path": "v1beta1/videos:annotate"
        }
      }
    }
  },
  "parameters": {
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "alt": {
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "pp": {
      "description": "Pretty-print response.",
      "type": "boolean",
      "default": "true",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "bearer_token": {
      "location": "query",
      "description": "OAuth bearer token.",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true",
      "location": "query"
    }
  },
  "version": "v1beta1",
  "baseUrl": "https://videointelligence.googleapis.com/",
  "servicePath": "",
  "description": "Google Cloud Video Intelligence API.",
  "kind": "discovery#restDescription",
  "basePath": "",
  "id": "videointelligence:v1beta1",
  "revision": "20170301",
  "documentationLink": "https://cloud.google.com/video-intelligence/docs/",
  "discoveryVersion": "v1"
}
